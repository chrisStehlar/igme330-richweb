{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://stehlar-c-hw3-refactor/./src/audio.ts","webpack://stehlar-c-hw3-refactor/./src/canvas.ts","webpack://stehlar-c-hw3-refactor/./src/main.ts","webpack://stehlar-c-hw3-refactor/./src/sprite.ts","webpack://stehlar-c-hw3-refactor/./src/utils.js.ts","webpack://stehlar-c-hw3-refactor/webpack/bootstrap","webpack://stehlar-c-hw3-refactor/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.analyserNode = exports.toggleDistortion = exports.toggleLowpass = exports.toggleHighpass = exports.setVolume = exports.loadSoundFile = exports.pauseCurrentSound = exports.playCurrentSound = exports.setupWebaudio = exports.audioCtx = void 0;\nlet audioCtx;\nlet audioDomElement;\nlet sourceNode;\nlet analyserNode;\nlet gainNode;\nlet biquadFilterNode;\nlet lowshelfBiquadFilterNode;\nlet distortionFilter;\nconst DEFAULTS = Object.freeze({\n    gain: .5,\n    numSamples: 256\n});\nconst setupWebaudio = (filePath) => {\n    const AudioContext = window.AudioContext;\n    exports.audioCtx = audioCtx = new AudioContext();\n    audioDomElement = new Audio();\n    loadSoundFile(filePath);\n    sourceNode = audioCtx.createMediaElementSource(audioDomElement);\n    exports.analyserNode = analyserNode = audioCtx.createAnalyser();\n    analyserNode.fftSize = DEFAULTS.numSamples;\n    gainNode = audioCtx.createGain();\n    gainNode.gain.value = DEFAULTS.gain;\n    biquadFilterNode = audioCtx.createBiquadFilter();\n    biquadFilterNode.type = \"highshelf\";\n    lowshelfBiquadFilterNode = audioCtx.createBiquadFilter();\n    lowshelfBiquadFilterNode.type = \"lowshelf\";\n    distortionFilter = audioCtx.createWaveShaper();\n    sourceNode.connect(biquadFilterNode);\n    biquadFilterNode.connect(lowshelfBiquadFilterNode);\n    lowshelfBiquadFilterNode.connect(distortionFilter);\n    distortionFilter.connect(analyserNode);\n    analyserNode.connect(gainNode);\n    gainNode.connect(audioCtx.destination);\n};\nexports.setupWebaudio = setupWebaudio;\nconst toggleHighpass = (isOn) => {\n    if (isOn) {\n        biquadFilterNode.frequency.setValueAtTime(1000, audioCtx.currentTime);\n        biquadFilterNode.gain.setValueAtTime(25, audioCtx.currentTime);\n    }\n    else {\n        biquadFilterNode.gain.setValueAtTime(0, audioCtx.currentTime);\n    }\n};\nexports.toggleHighpass = toggleHighpass;\nconst toggleLowpass = (isOn) => {\n    if (isOn) {\n        lowshelfBiquadFilterNode.frequency.setValueAtTime(1000, audioCtx.currentTime);\n        lowshelfBiquadFilterNode.gain.setValueAtTime(15, audioCtx.currentTime);\n    }\n    else {\n        lowshelfBiquadFilterNode.gain.setValueAtTime(0, audioCtx.currentTime);\n    }\n};\nexports.toggleLowpass = toggleLowpass;\nconst toggleDistortion = (isOn, value) => {\n    if (isOn) {\n        distortionFilter.curve = makeDistortionCurve(value);\n    }\n    else {\n        distortionFilter.curve = null;\n    }\n};\nexports.toggleDistortion = toggleDistortion;\nconst makeDistortionCurve = (amount = 20) => {\n    const n_samples = 256;\n    const curve = new Float32Array(n_samples);\n    for (let i = 0; i < n_samples; ++i) {\n        const x = i * 2 / n_samples - 1;\n        curve[i] = (Math.PI + amount) * x / (Math.PI + amount * Math.abs(x));\n    }\n    return curve;\n};\nconst loadSoundFile = (filePath) => {\n    audioDomElement.src = filePath;\n};\nexports.loadSoundFile = loadSoundFile;\nconst playCurrentSound = () => {\n    audioDomElement.play();\n};\nexports.playCurrentSound = playCurrentSound;\nconst pauseCurrentSound = () => {\n    audioDomElement.pause();\n};\nexports.pauseCurrentSound = pauseCurrentSound;\nconst setVolume = (value) => {\n    value = Number(value);\n    gainNode.gain.value = value;\n};\nexports.setVolume = setVolume;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.drawSprite = exports.draw = exports.setupCanvas = void 0;\nconst utils = __importStar(require(\"./utils.js\"));\n/*\n    The purpose of this file is to take in the analyser node and a <canvas> element:\n      - the module will create a drawing context that points at the <canvas>\n      - it will store the reference to the analyser node\n      - in draw(), it will loop through the data in the analyser node\n      - and then draw something representative on the canvas\n      - maybe a better name for this file/module would be *visualizer.js* ?\n*/\nlet ctx, canvasWidth, canvasHeight, gradient, analyserNode, audioData;\nconst setupCanvas = (canvasElement, analyserNodeRef) => {\n    // create drawing context\n    ctx = canvasElement.getContext(\"2d\");\n    canvasWidth = canvasElement.width;\n    canvasHeight = canvasElement.height;\n    // create a gradient that runs top to bottom\n    gradient = utils.getLinearGradient(ctx, 0, 0, 0, canvasHeight, [\n        { percent: 0, color: \"yellow\" },\n        { percent: 0.3, color: \"orange\" },\n        { percent: 0.6, color: \"red\" },\n        { percent: 0.8, color: \"darkred\" },\n        { percent: 1, color: \"black\" }\n    ]);\n    // keep a reference to the analyser node\n    analyserNode = analyserNodeRef;\n    // this is the array where the analyser data will be stored\n    audioData = new Uint8Array(analyserNode.fftSize / 2);\n};\nexports.setupCanvas = setupCanvas;\nconst draw = (params = {}) => {\n    // 1 - populate the audioData array with the frequency data from the analyserNode\n    // notice these arrays are passed \"by reference\" \n    if (params.visualMode == \"frequency\")\n        analyserNode.getByteFrequencyData(audioData);\n    else\n        analyserNode.getByteTimeDomainData(audioData);\n    // 2 - draw background\n    ctx.save();\n    ctx.fillStyle = \"black\";\n    ctx.globalAlpha = .1;\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    ctx.restore();\n    // 3 - draw gradient\n    if (params.showGradient) {\n        ctx.save();\n        ctx.fillStyle = gradient;\n        ctx.globalAlpha = .3;\n        ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n        ctx.restore();\n    }\n    // 4 - draw bars\n    if (params.showBars) {\n        const barSpacing = 4;\n        const margin = 5;\n        const screenWidthForBars = canvasWidth - (audioData.length * barSpacing) - margin * 2;\n        const barWidth = screenWidthForBars / audioData.length;\n        const barHeight = 200;\n        const topSpacing = 100;\n        ctx.save();\n        ctx.fillStyle = `rgba(255,255,255, 0.5)`;\n        ctx.strokeStyle = `rgba(0, 0, 0, 0.5)`;\n        // loop through the data and draw\n        for (let i = 0; i < audioData.length; i++) {\n            if (i % 2 == 0)\n                ctx.fillStyle = `rgba(255,255,255, 0.5)`;\n            else\n                ctx.fillStyle = `rgba(0,0,0, 0.5)`;\n            ctx.fillRect(margin + i * (barWidth + barSpacing), topSpacing + 256 - audioData[i], barWidth, barHeight);\n            ctx.strokeRect(margin + i * (barWidth + barSpacing), topSpacing + 256 - audioData[i], barWidth, barHeight);\n        }\n        ctx.restore();\n    }\n    // 5 - draw circles\n    if (params.showCircles) {\n        const maxRadius = canvasHeight / 4;\n        ctx.save();\n        ctx.globalAlpha = 0.5;\n        for (let i = 0; i < audioData.length; i++) {\n            // red circles\n            const percent = audioData[i] / 255;\n            const circleRadius = percent * maxRadius;\n            ctx.beginPath();\n            ctx.fillStyle = utils.makeColor(255, 255, 0, .34 - percent / 3.0);\n            ctx.arc(canvasWidth / 2, canvasHeight / 2, circleRadius, 0, 2 * Math.PI, false);\n            ctx.fill();\n            ctx.closePath();\n            // blue circles, bigger\n            ctx.beginPath();\n            ctx.fillStyle = utils.makeColor(0, 0, 0, .10 - percent / 10.0);\n            ctx.arc(canvasWidth / 2, canvasHeight / 2, circleRadius * 1.5, 0, 2 * Math.PI, false);\n            ctx.fill();\n            ctx.closePath();\n            // yellow circles, smaller\n            ctx.save();\n            ctx.beginPath();\n            ctx.fillStyle = utils.makeColor(255, 0, 0, .5 - percent / 5.0);\n            ctx.arc(canvasWidth / 2, canvasHeight / 2, circleRadius * .5, 0, 2 * Math.PI, false);\n            ctx.fill();\n            ctx.closePath();\n            ctx.restore();\n        }\n        ctx.restore();\n    }\n    // 6 - bitmap manipulation\n    // TODO: right now. we are looping though every pixel of the canvas (320,000 of them!), \n    // regardless of whether or not we are applying a pixel effect\n    // At some point, refactor this code so that we are looping though the image data only if\n    // it is necessary\n    // A) grab all of the pixels on the canvas and put them in the `data` array\n    // `imageData.data` is a `Uint8ClampedArray()` typed array that has 1.28 million elements!\n    // the variable `data` below is a reference to that array \n    const imageData = ctx.getImageData(0, 0, canvasWidth, canvasHeight);\n    const data = imageData.data;\n    const length = data.length;\n    const width = imageData.width;\n    // B) Iterate through each pixel, stepping 4 elements at a time (which is the RGBA for 1 pixel)\n    for (let i = 0; i < length; i += 4) {\n        // C) randomly change every 20th pixel to red\n        if (params.showNoise && Math.random() < .05) {\n            // data[i] is the red channel\n            // data[i+1] is the green channel\n            // data[i+2] is the blue channel\n            // data[i+3] is the alpha channel\n            // zero out the red and green and blue channels\n            // make the red channel 100% red\n            data[i] = data[i + 1] = data[i + 2] = 0;\n            data[i] = 0;\n        }\n        if (params.showInvert) {\n            const red = data[i], green = data[i + 1], blue = data[i + 2];\n            data[i] = 255 - red;\n            data[i + 1] = 255 - green;\n            data[i + 2] = 255 - blue;\n        }\n    }\n    if (params.showEmboss) {\n        for (let i = 0; i < length; i++) {\n            if (i % 4 == 3)\n                continue;\n            data[i] = 127 + 2 * data[i] - data[i + 4] - data[i + width * 4];\n        }\n    }\n    // D) copy image data back to canvas\n    ctx.putImageData(imageData, 0, 0);\n};\nexports.draw = draw;\nconst drawSprite = (sprite) => {\n    sprite.draw(ctx);\n};\nexports.drawSprite = drawSprite;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.init = void 0;\nconst utils = __importStar(require(\"./utils.js\"));\nconst audio = __importStar(require(\"./audio\"));\nconst canvas = __importStar(require(\"./canvas\"));\nconst sprite_1 = require(\"./sprite\");\n/*\n  main.js is primarily responsible for hooking up the UI to the rest of the application\n  and setting up the main event loop\n*/\n// We will write the functions in this file in the traditional ES5 way\n// In this instance, we feel the code is more readable if written this way\n// If you want to re-write these as ES6 arrow functions, to be consistent with the other files, go ahead!\nconst drawParams = {\n    showGradient: true,\n    showBars: true,\n    showCircles: true,\n    showNoise: false,\n    showInvert: false,\n    showEmboss: false,\n    visualMode: \"frequency\",\n    showSprites: true\n};\nconst audioParams = {\n    trebleActive: false,\n    bassActive: false,\n    distortionActive: false\n};\nconst hippo = new sprite_1.Sprite(200, 200, \"media/hippo.png\", 5);\nconst giraffe = new sprite_1.Sprite(300, 100, \"media/giraffe.png\", -3);\nlet movementOn = false;\nconst init = () => {\n    console.log(\"init called\");\n    console.log(`Testing utils.getRandomColor() import: ${utils.getRandomColor()}`);\n    audio.setupWebaudio(\"media/Joe Satriani - Sahara.mp3\");\n    initJSON();\n    const canvasElement = document.querySelector(\"canvas\"); // hookup <canvas> element\n    setupUI(canvasElement);\n    canvas.setupCanvas(canvasElement, audio.analyserNode);\n    loop();\n};\nexports.init = init;\nconst initJSON = () => {\n    let json;\n    const url = \"data/av-data.json\";\n    const xhr = new XMLHttpRequest();\n    xhr.onload = (e) => {\n        let responseText = e.target.responseText;\n        try {\n            json = JSON.parse(responseText);\n            if (json != null) {\n                const h1Element = document.querySelector(\"h1\");\n                if (h1Element) {\n                    h1Element.innerHTML = json.title;\n                }\n                let trackSelect = document.querySelector(\"#track-select\");\n                json.audioFiles.forEach((file) => {\n                    let option = document.createElement(\"option\");\n                    option.value = \"media/\" + file.name;\n                    option.text = file.name.replace(\".mp3\", \"\");\n                    if (trackSelect) {\n                        trackSelect.appendChild(option);\n                    }\n                });\n                const instructionsElement = document.querySelector(\"#instructions\");\n                if (instructionsElement) {\n                    instructionsElement.innerHTML = json.instructions;\n                }\n            }\n        }\n        catch (_a) {\n            console.log(\"Could not parse the JSON.\");\n            return;\n        }\n    };\n    xhr.open(\"GET\", url);\n    xhr.send();\n};\nconst setupUI = (canvasElement) => {\n    // A - hookup fullscreen button\n    const fsButton = document.querySelector(\"#btn-fullscreen\");\n    const playButton = document.querySelector(\"#btn-play\");\n    // add .onclick event to button\n    fsButton.onclick = e => {\n        console.log(\"goFullscreen() called\");\n        utils.goFullscreen(canvasElement);\n    };\n    // B - add onclick event for play button to start the music\n    playButton.onclick = (e) => {\n        //console.log(`audioCtx.state before = ${audio.audioCtx.state}`);\n        // check if audiocontext is in suspended state because of autoplay pausing\n        if (audio.audioCtx.state == \"suspended\") {\n            audio.audioCtx.resume();\n        }\n        //console.log(`audioCtx.state after = ${audio.audioCtx.state}`);\n        if (e.target.dataset.playing == \"no\") {\n            // if track is currently paused then play it\n            audio.playCurrentSound();\n            e.target.dataset.playing = \"yes\";\n            movementOn = true;\n        }\n        else {\n            audio.pauseCurrentSound();\n            e.target.dataset.playing = \"no\";\n            movementOn = false;\n        }\n    };\n    // C - hookup volume slider and label\n    const volumeSlider = document.querySelector(\"#volume-slider\");\n    const volumeLabel = document.querySelector(\"#volume-label\");\n    volumeSlider.oninput = (e) => {\n        const sliderValue = Number(e.target.value);\n        audio.setVolume(sliderValue);\n        volumeLabel.innerHTML = Math.round(sliderValue / 2 * 100).toString();\n        const value = Math.round(sliderValue / 2 * 100);\n        hippo.velocity = { x: (value / 18) * Math.sign(hippo.velocity.x), y: (value / 16) * Math.sign(hippo.velocity.x) };\n        giraffe.velocity = { x: (value / 16) * Math.sign(hippo.velocity.x), y: (value / 18) * Math.sign(hippo.velocity.x) };\n    };\n    volumeSlider.dispatchEvent(new Event(\"input\"));\n    // D - hookup track <select>\n    const trackSelect = document.querySelector(\"#track-select\");\n    trackSelect.onchange = (e) => {\n        audio.loadSoundFile(e.target.value);\n        if (playButton.dataset.playing == \"yes\") {\n            playButton.dispatchEvent(new MouseEvent(\"click\"));\n        }\n    };\n    // checkboxes\n    const gradientCheckbox = document.querySelector(\"#gradient-cb\");\n    const barsCheckbox = document.querySelector(\"#bars-cb\");\n    const circlesCheckbox = document.querySelector(\"#circles-cb\");\n    const noiseCheckbox = document.querySelector(\"#noise-cb\");\n    const invertCheckbox = document.querySelector(\"#invert-cb\");\n    const embossCheckbox = document.querySelector(\"#emboss-cb\");\n    const spritesCheckbox = document.querySelector(\"#sprites-cb\");\n    gradientCheckbox.onchange = e => {\n        drawParams.showGradient = !drawParams.showGradient;\n    };\n    barsCheckbox.onchange = e => {\n        drawParams.showBars = !drawParams.showBars;\n    };\n    circlesCheckbox.onchange = e => {\n        drawParams.showCircles = !drawParams.showCircles;\n    };\n    noiseCheckbox.onchange = e => {\n        drawParams.showNoise = !drawParams.showNoise;\n    };\n    invertCheckbox.onchange = e => {\n        drawParams.showInvert = !drawParams.showInvert;\n    };\n    embossCheckbox.onchange = e => {\n        drawParams.showEmboss = !drawParams.showEmboss;\n    };\n    spritesCheckbox.onchange = e => {\n        drawParams.showSprites = !drawParams.showSprites;\n        hippo.y = 200;\n        giraffe.y = 300;\n    };\n    // treble, bass, disortion\n    const distortionSlider = document.querySelector(\"#distortion-volume-slider\");\n    const disortionVolumeLabel = document.querySelector(\"#distortion-volume-label\");\n    disortionVolumeLabel.innerHTML = Math.round(Number(distortionSlider.value) / 2 * 100).toString();\n    distortionSlider.oninput = (e) => {\n        const sliderValue = Number(e.target.value);\n        const value = Math.round(sliderValue / 2 * 100);\n        disortionVolumeLabel.innerHTML = value.toString();\n        audio.toggleDistortion(audioParams.distortionActive, value);\n    };\n    const distortionCheckbox = document.querySelector(\"#distortion-cb\");\n    distortionCheckbox.onchange = e => {\n        audioParams.distortionActive = !audioParams.distortionActive;\n        const sliderValue = Number(e.target.value);\n        const value = Math.round(sliderValue / 2 * 100);\n        disortionVolumeLabel.innerHTML = value.toString();\n        audio.toggleDistortion(audioParams.distortionActive, value);\n    };\n    const trebleCheckbox = document.querySelector(\"#treble-cb\");\n    const bassCheckbox = document.querySelector(\"#bass-cb\");\n    trebleCheckbox.onchange = e => {\n        audioParams.trebleActive = !audioParams.trebleActive;\n        audio.toggleHighpass(audioParams.trebleActive);\n    };\n    bassCheckbox.onchange = e => {\n        audioParams.bassActive = !audioParams.bassActive;\n        audio.toggleHighpass(audioParams.bassActive);\n    };\n    // visual mode\n    const visualModeSelect = document.querySelector(\"#visualization-mode\");\n    visualModeSelect.onchange = e => {\n        const target = e.target;\n        drawParams.visualMode = target.value;\n    };\n}; // end setupUI\nconst loop = () => {\n    setTimeout(loop, 1 / 60.0);\n    canvas.draw(drawParams);\n    if (drawParams.showSprites) {\n        canvas.drawSprite(hippo);\n        canvas.drawSprite(giraffe);\n        if (movementOn) {\n            hippo.update();\n            giraffe.update();\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sprite = void 0;\nclass Sprite {\n    constructor(x, y, imageSrc, velocity) {\n        this.update = () => {\n            this.x += this.velocity.x;\n            this.y += this.velocity.y;\n            if (this.y > 300 || this.y < -100) {\n                this.velocity.y = -this.velocity.y;\n            }\n            if (this.x > 600 || this.x < -100) {\n                this.x = Math.floor(Math.random() * 401);\n                this.velocity.x = -this.velocity.x;\n            }\n        };\n        this.draw = (ctx) => {\n            ctx.drawImage(this.image, this.x, this.y);\n        };\n        this.x = x;\n        this.y = y;\n        this.image = new Image();\n        this.image.src = imageSrc;\n        this.velocity = { x: velocity, y: -velocity };\n        console.log(\"Sprite created at position:\", x, y);\n    }\n}\nexports.Sprite = Sprite;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.goFullscreen = exports.getLinearGradient = exports.getRandomColor = exports.makeColor = void 0;\nconst makeColor = (red, green, blue, alpha = 1) => {\n    return `rgba(${red},${green},${blue},${alpha})`;\n};\nexports.makeColor = makeColor;\nconst getRandom = (min, max) => {\n    return Math.random() * (max - min) + min;\n};\nconst getRandomColor = () => {\n    const floor = 35; // so that colors are not too bright or too dark \n    const getByte = () => getRandom(floor, 255 - floor);\n    return `rgba(${getByte()},${getByte()},${getByte()},1)`;\n};\nexports.getRandomColor = getRandomColor;\nconst getLinearGradient = (ctx, startX, startY, endX, endY, colorStops) => {\n    let lg = ctx.createLinearGradient(startX, startY, endX, endY);\n    for (let stop of colorStops) {\n        lg.addColorStop(stop.percent, stop.color);\n    }\n    return lg;\n};\nexports.getLinearGradient = getLinearGradient;\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\nconst goFullscreen = (element) => {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n};\nexports.goFullscreen = goFullscreen;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(927);\n"],"names":["audioCtx","audioDomElement","sourceNode","analyserNode","gainNode","biquadFilterNode","lowshelfBiquadFilterNode","distortionFilter","Object","defineProperty","exports","value","toggleDistortion","toggleLowpass","toggleHighpass","setVolume","loadSoundFile","pauseCurrentSound","playCurrentSound","setupWebaudio","DEFAULTS","freeze","gain","numSamples","filePath","AudioContext","window","Audio","createMediaElementSource","createAnalyser","fftSize","createGain","createBiquadFilter","type","createWaveShaper","connect","destination","isOn","frequency","setValueAtTime","currentTime","curve","makeDistortionCurve","amount","Float32Array","i","x","Math","PI","abs","src","play","pause","Number","ownKeys","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","length","mod","result","drawSprite","draw","setupCanvas","utils","ctx","canvasWidth","canvasHeight","gradient","audioData","canvasElement","analyserNodeRef","getContext","width","height","getLinearGradient","percent","color","Uint8Array","params","visualMode","getByteFrequencyData","getByteTimeDomainData","save","fillStyle","globalAlpha","fillRect","restore","showGradient","showBars","barSpacing","margin","barWidth","barHeight","topSpacing","strokeStyle","strokeRect","showCircles","maxRadius","circleRadius","beginPath","makeColor","arc","fill","closePath","imageData","getImageData","data","showNoise","random","showInvert","red","green","blue","showEmboss","putImageData","sprite","init","audio","canvas","sprite_1","drawParams","showSprites","audioParams","trebleActive","bassActive","distortionActive","hippo","Sprite","giraffe","movementOn","console","log","getRandomColor","initJSON","document","querySelector","setupUI","loop","json","xhr","XMLHttpRequest","onload","e","responseText","target","JSON","parse","h1Element","innerHTML","title","trackSelect","audioFiles","forEach","file","option","createElement","name","text","replace","appendChild","instructionsElement","instructions","_a","open","send","fsButton","playButton","onclick","goFullscreen","state","resume","dataset","playing","volumeSlider","volumeLabel","oninput","sliderValue","round","toString","velocity","sign","y","dispatchEvent","Event","onchange","MouseEvent","gradientCheckbox","barsCheckbox","circlesCheckbox","noiseCheckbox","invertCheckbox","embossCheckbox","spritesCheckbox","distortionSlider","disortionVolumeLabel","trebleCheckbox","bassCheckbox","setTimeout","update","constructor","imageSrc","floor","drawImage","image","Image","alpha","getByte","startX","startY","endX","endY","colorStops","lg","createLinearGradient","stop","addColorStop","element","requestFullscreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"sourceRoot":""}